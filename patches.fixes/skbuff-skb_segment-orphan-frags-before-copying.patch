From: "Michael S. Tsirkin" <mst@redhat.com>
Date: Mon, 10 Mar 2014 19:28:08 +0200
Subject: [1/1] skbuff: skb_segment: orphan frags before copying
Patch-mainline: v3.14-rc7
Git-commit: 1fd819ecb90cc9b822cd84d3056ddba315d3340f
References: bnc#867723 CVE-2014-0131

skb_segment copies frags around, so we need
to copy them carefully to avoid accessing
user memory after reporting completion to userspace
through a callback.

skb_segment doesn't normally happen on datapath:
TSO needs to be disabled - so disabling zero copy
in this case does not look like a big deal.

Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
Acked-by: Herbert Xu <herbert@gondor.apana.org.au>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Benjamin Poirier <bpoirier@suse.de>
---
 net/core/skbuff.c |    3 +++
 1 file changed, 3 insertions(+)

--- a/net/core/skbuff.c
+++ b/net/core/skbuff.c
@@ -2738,6 +2738,9 @@ struct sk_buff *skb_segment(struct sk_bu
 	int i = 0;
 	int pos;
 
+	if (unlikely(skb_orphan_frags(skb, GFP_ATOMIC)))
+		goto err;
+
 	__skb_push(skb, doffset);
 	headroom = skb_headroom(skb);
 	pos = skb_headlen(skb);
