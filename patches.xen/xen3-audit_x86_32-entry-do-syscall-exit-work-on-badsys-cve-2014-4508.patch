From: Andy Lutomirski <luto@amacapital.net>
Date: Mon, 23 Jun 2014 14:22:15 -0700
Subject: x86_32, entry: Do syscall exit work on badsys (CVE-2014-4508)
References: bnc#883724, CVE-2014-4508
Patch-mainline: v3.16-rc3
Signed-off-by: Tony Jones <tonyj@suse.de>

    x86_32, entry: Do syscall exit work on badsys (CVE-2014-4508)
    
    The bad syscall nr paths are their own incomprehensible route
    through the entry control flow.  Rearrange them to work just like
    syscalls that return -ENOSYS.
    
    This fixes an OOPS in the audit code when fast-path auditing is
    enabled and sysenter gets a bad syscall nr (CVE-2014-4508).
    
    This has probably been broken since Linux 2.6.27:
    af0575bba0 i386 syscall audit fast-path
    
    Cc: stable@vger.kernel.org
    Cc: Roland McGrath <roland@redhat.com>
    Reported-by: Toralf FÃ¶rster <toralf.foerster@gmx.de>
    Signed-off-by: Andy Lutomirski <luto@amacapital.net>
    Link: http://lkml.kernel.org/r/e09c499eade6fc321266dd6b54da7beb28d6991c.1403558229.git.luto@amacapital.net
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>

Automatically created from "patches.fixes/audit_x86_32-entry-do-syscall-exit-work-on-badsys-cve-2014-4508.patch" by xen-port-patches.py

--- 12.3.orig/arch/x86/kernel/entry_32-xen.S	2014-07-04 08:04:55.000000000 +0200
+++ 12.3/arch/x86/kernel/entry_32-xen.S	2014-07-03 11:52:42.000000000 +0200
@@ -438,9 +438,10 @@ sysenter_past_esp:
 	jnz sysenter_audit
 sysenter_do_call:
 	cmpl $(NR_syscalls), %eax
-	jae syscall_badsys
+	jae sysenter_badsys
 	call *sys_call_table(,%eax,4)
 	movl %eax,PT_EAX(%esp)
+sysenter_after_call:
 	LOCKDEP_SYS_EXIT
 	DISABLE_INTERRUPTS(CLBR_ANY)
 	TRACE_IRQS_OFF
@@ -754,8 +755,13 @@ END(syscall_fault)
 
 syscall_badsys:
 	movl $-ENOSYS,PT_EAX(%esp)
-	jmp resume_userspace
+	jmp syscall_exit
 END(syscall_badsys)
+
+sysenter_badsys:
+	movl $-ENOSYS,PT_EAX(%esp)
+	jmp sysenter_after_call
+END(sysenter_badsys)
 	CFI_ENDPROC
 /*
  * End of kprobes section
@@ -1520,16 +1526,15 @@ cstar_trace_entry:
 	jmp syscall_exit
 cstar_badsys:
 	movl $-ENOSYS,PT_EAX(%esp)
-.Lcstar_resume:
-	movl PT_ECX(%esp),%ecx
-	movl %ecx,PT_EBP(%esp)		# put user EBP back in place
-	jmp resume_userspace
+	jmp .Lcstar_exit
 	CFI_RESTORE_STATE
 cstar_fault:
 	movl $-EFAULT,%eax
 	SAVE_ALL
 	GET_THREAD_INFO(%ebp)
-	jmp .Lcstar_resume
+	movl PT_ECX(%esp),%ecx
+	movl %ecx,PT_EBP(%esp)		# put user EBP back in place
+	jmp resume_userspace
 	CFI_ENDPROC
 ENDPROC(ia32pv_cstar_target)
 
