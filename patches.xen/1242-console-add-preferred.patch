From http://xenbits.xen.org/hg/linux-2.6.18-xen.hg/rev/731ff1f10c46
From: xen-devel@lists.xenproject.org
Patch-mainline: n/a
Subject: xencons: generalize use of add_preferred_console()
References: bnc#733022, bnc#852652

Changeset 762:a070228ac76e ("add hvc compatibility mode to xencons"
added this call just for the HVC case, without giving any reason why
HVC would be special in this regard. Use the call for all cases.

Signed-off-by: Jan Beulich <jbeulich@suse.com>

From http://xenbits.xen.org/hg/linux-2.6.18-xen.hg/rev/c319bf65ef04
From: xen-devel@lists.xenproject.org
Patch-mainline: n/a
Subject: xencons: further Dom0 handling improvements

c/s 1242:731ff1f10c46 ("xencons: generalize use of
add_preferred_console()") still left cases where (in Dom0) the console
would get registered with index -1. Eliminate these cases by
- also calling add_preferred_console() in Dom0 when "xencons=" was
  specified
- setting the index directly when in Dom0 and "xencons=" was not given

Also do some cleanup:
- Move the declaration of console_use_vt into the respective global
  header (where it should have been placed from the beginning), and
  use a #define instead of a variable when !XEN.
- Replace the needless uses of goto in xen_console_init() with plain
  return statements.

Reported-by: Olaf Hering <olaf@aepfle.de>
Signed-off-by: Jan Beulich <jbeulich@suse.com>

--- 12.3.orig/drivers/tty/tty_io.c	2013-06-24 16:32:28.000000000 +0200
+++ 12.3/drivers/tty/tty_io.c	2014-02-19 14:38:12.000000000 +0100
@@ -137,7 +137,9 @@ EXPORT_SYMBOL(tty_mutex);
 /* Spinlock to protect the tty->tty_files list */
 DEFINE_SPINLOCK(tty_files_lock);
 
+#ifndef console_use_vt
 int console_use_vt = 1;
+#endif
 
 static ssize_t tty_read(struct file *, char __user *, size_t, loff_t *);
 static ssize_t tty_write(struct file *, const char __user *, size_t, loff_t *);
--- 12.3.orig/drivers/xen/console/console.c	2014-06-23 11:57:15.000000000 +0200
+++ 12.3/drivers/xen/console/console.c	2014-02-19 14:38:12.000000000 +0100
@@ -86,9 +86,8 @@ static int __init xencons_setup(char *st
 {
 	char *q;
 	int n;
-	extern int console_use_vt;
 
-	console_use_vt = 1;
+	console_use_vt = -1;
 	if (!strncmp(str, "ttyS", 4)) {
 		xc_mode = XC_SERIAL;
 		str += 4;
@@ -193,13 +192,13 @@ static struct console kcons_info = {
 static int __init xen_console_init(void)
 {
 	if (!is_running_on_xen())
-		goto out;
+		return 0;
 
 	if (is_initial_xendomain()) {
 		kcons_info.write = kcons_write_dom0;
 	} else {
 		if (!xen_start_info->console.domU.evtchn)
-			goto out;
+			return 0;
 		kcons_info.write = kcons_write;
 	}
 
@@ -214,8 +213,6 @@ static int __init xen_console_init(void)
 		strcpy(kcons_info.name, "hvc");
 		if (xc_num == -1)
 			xc_num = 0;
-		if (!is_initial_xendomain())
-			add_preferred_console(kcons_info.name, xc_num, NULL);
 		break;
 
 	case XC_SERIAL:
@@ -231,14 +228,17 @@ static int __init xen_console_init(void)
 		break;
 
 	default:
-		goto out;
+		return 0;
 	}
 
 	wbuf = alloc_bootmem(wbuf_size);
 
+	if (console_use_vt <= 0 || !is_initial_xendomain())
+		add_preferred_console(kcons_info.name, xc_num, NULL);
+	else
+		kcons_info.index = xc_num;
 	register_console(&kcons_info);
 
- out:
 	return 0;
 }
 console_initcall(xen_console_init);
--- 12.3.orig/include/linux/console.h	2014-06-23 11:57:15.000000000 +0200
+++ 12.3/include/linux/console.h	2014-02-19 14:38:12.000000000 +0100
@@ -74,6 +74,12 @@ extern const struct consw vga_con;	/* VG
 extern const struct consw newport_con;	/* SGI Newport console  */
 extern const struct consw prom_con;	/* SPARC PROM console */
 
+#ifdef CONFIG_XEN
+extern int console_use_vt;
+#else
+#define console_use_vt 1
+#endif
+
 int con_is_bound(const struct consw *csw);
 int register_con_driver(const struct consw *csw, int first, int last);
 int unregister_con_driver(const struct consw *csw);
